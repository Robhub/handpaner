(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{277:function(e,t,n){"use strict";n.r(t);var o=n(19),component=Object(o.a)({},(function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)}),[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("h1",[e._v("Help")]),e._v(" "),n("h2",[e._v("Colors")]),e._v(" "),n("ul",[n("li",[n("span",{staticStyle:{color:"#0ff"}},[e._v("CYAN")]),e._v(" = Ding and octaves of ding for handpan models, tonic/root note for scales and chords.\n        ")]),e._v(" "),n("li",[n("span",{staticStyle:{color:"#0f0"}},[e._v("GREEN")]),e._v(" = Note belonging to the handpan model/scale/chord, note played at least once for the\n            songs.\n        ")]),e._v(" "),n("li",[n("span",{staticStyle:{color:"#ff0"}},[e._v("YELLOW")]),e._v(" = Note which is not in the handpan model, but exists in the model at a different\n            octave, and should logically complete the model and sound good.\n        ")])]),e._v(" "),n("h2",[e._v("Features")]),e._v(" "),n("div",[e._v("\n        At any time you can select another Ding and it will transpose the current sound model to this particular ding tonality. You can\n        also edit the notes input field and the sound model will change in realtime. To add bottom notes, put each note individually in\n        parenthesis. For example D/ (G) A B C D E F G A (B) (C). You can also specify the octave by putting a number after the note\n        letter, for example D/ (C3) A B C D E F G A.\n    ")]),e._v(" "),n("h2",[e._v("Model")]),e._v(" "),n("div",[e._v("\n        A handpan sound model is defined by a specific set of notes at specific octaves. Naming handpan sound models is more difficult\n        than naming regular music scales because of the physical constraints: the number of notes is quite limited and there is a\n        central note (the ding), which is not always the tonic/root of the standard music scale it is named after. For example, the Kurd\n        scale is named after the first note of the tone field corresponding to the Phrygian scale. The celtic minor scale however, is\n        named after the ding corresponding to the Hexatonic minor scale.\n    ")]),e._v(" "),n("h2",[e._v("Scale")]),e._v(" "),n("div",[e._v("\n        A standard musical scale is defined by a set of notes, which can be played at any octaves. The C Major scale is defined by the\n        notes C D E F G A B, where C is the root/tonic. The A Minor scale is defined by the notes A B C D E F G, where A is the\n        root/tonic. Every note can then be thought in term of its interval from the root/tonic. The major scale is composed of the\n        following intervals: 1 2 3 4 5 6 7 (unison, major second, major third, perfect fourth, perfect fifth, major sixth, major\n        seventh). The minor scale is composed of the following intervals: 1 2 3m 4 5 6m 7m (unison, major second, minor third, perfect\n        fourth, perfect fifth, minor sixth, minor seventh).\n    ")]),e._v(" "),n("h2",[e._v("Chord")]),e._v(" "),n("div",[e._v("\n        A chord is also a set of notes, which can be played at any octaves, just like a scale. The particularity is that it has fewer\n        notes (usually 3 or 4), but with the added benefit that all these notes sound good together and can be played at the same time.\n    ")]),e._v(" "),n("h2",[e._v("Songs")]),e._v(" "),n("div",[e._v("\n        I have put together a small set of songs, playable songs have a small music note icon next to it : just click on a song name and\n        a button to start playing it will appear. The number in parenthesis is the number of semitones transposition from its original\n        tonality. I have mainly generated these songs through "),n("a",{attrs:{href:"https://abcnotation.com/"}},[e._v("ABC Notation")]),e._v(". If you want to help\n        me build this database, send me songs in this format (you can use "),n("a",{attrs:{href:"https://editor.drawthedots.com/"}},[e._v("this editor")]),e._v(" as a\n        playground).\n    ")])])}],!1,null,null,null);t.default=component.exports}}]);